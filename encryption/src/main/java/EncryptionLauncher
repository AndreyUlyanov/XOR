
import org.kohsuke.args4j.Argument;
import org.kohsuke.args4j.CmdLineException;
import org.kohsuke.args4j.CmdLineParser;
import org.kohsuke.args4j.Option;

import java.io.FileOutputStream;
import java.io.IOException;

class EncryptionLauncher {

    @Option(name = "-c", metaVar = "EKey", required = true, usage = "Encryption key")
    private String eKey;
    /*
        @Option(name = "-d", metaVar = "DKey", required = true, usage = "Decryption key")
        private String dKey;
    */
    @Argument(required = true, metaVar = "InputName", usage = "Input file name")
    private String inputFileName;

    @Argument(required = true, metaVar = "OutputName", index = 1, usage = "Output file name")
    private String outputFileName;

    public static void main(String[] args) {
        new EncryptionLauncher().launch(args);
    }

    public void launch(String[] args) {
        CmdLineParser parser = new CmdLineParser(this);

        try {
            parser.parseArgument(args);
        } catch (CmdLineException e) {
            System.err.println(e.getMessage());
            System.err.println("ciphxor [-c key] [-d key] inputname.txt outputname.txt");
            parser.printUsage(System.err);
            return;
        }

        Encryption encryption = new Encryption(inputFileName, outputFileName);
        try {
            byte[] result = encryption.encrypt(eKey, inputFileName, outputFileName);
            FileOutputStream writer = new FileOutputStream(outputFileName);
            writer.write(result);
        } catch (IOException e) {
            System.err.println(e.getMessage());
        }
    }

}